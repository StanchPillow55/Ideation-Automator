name: multimedia-sourcer
services:
  db:
    image: pgvector/pgvector:pg16
    environment: { POSTGRES_DB: msourcer, POSTGRES_USER: msource, POSTGRES_PASSWORD: msource }
    ports: ["5432:5432"]
    volumes: [ "pgdata:/var/lib/postgresql/data", "./infra/db-init:/docker-entrypoint-initdb.d:ro" ]
    healthcheck: { test: ["CMD-SHELL","pg_isready -U msource -d msourcer"], interval: 5s, timeout: 5s, retries: 20 }
  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]
    healthcheck: { test: ["CMD","redis-cli","ping"], interval: 5s, timeout: 5s, retries: 20 }
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment: { MINIO_ROOT_USER: admin, MINIO_ROOT_PASSWORD: admin123 }
    ports: ["9000:9000","9001:9001"]
    volumes: [ "minio_data:/data" ]
    healthcheck: { test: ["CMD","curl","-f","http://localhost:9000/minio/health/ready"], interval: 5s, timeout: 5s, retries: 20 }
  minio-setup:
    image: minio/mc:latest
    depends_on: { minio: { condition: service_healthy } }
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 admin admin123 &&
      mc mb --ignore-existing local/ms-exports &&
      mc anonymous set download local/ms-exports || true && echo ready
      "
    restart: "no"
  api:
    build: { context: ./api, dockerfile: Dockerfile }
    environment:
      DATABASE_URL: postgresql+psycopg://msource:msource@db:5432/msourcer
      REDIS_URL: redis://redis:6379/0
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: admin123
      MINIO_BUCKET: ms-exports
      EXPORTS_DIR: /data/exports
      PYTHONDONTWRITEBYTECODE: "1"
      PYTHONUNBUFFERED: "1"
      CORS_ALLOW_ORIGIN: "*"
    volumes: [ "./data:/data" ]
    depends_on:
      db: { condition: service_healthy }
      redis: { condition: service_healthy }
      minio: { condition: service_healthy }
      minio-setup: { condition: service_completed_successfully }
    ports: ["8000:8000"]
  worker:
    build: { context: ./api, dockerfile: Dockerfile }
    command: celery -A celery_app.celery worker -Ofair -Q default -l INFO
    environment:
      DATABASE_URL: postgresql+psycopg://msource:msource@db:5432/msourcer
      REDIS_URL: redis://redis:6379/0
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: admin123
      MINIO_BUCKET: ms-exports
      EXPORTS_DIR: /data/exports
      PYTHONDONTWRITEBYTECODE: "1"
      PYTHONUNBUFFERED: "1"
    volumes: [ "./data:/data" ]
    depends_on:
      api: { condition: service_started }
      db: { condition: service_healthy }
      redis: { condition: service_healthy }
  flower:
    image: mher/flower:latest
    command: ["flower","--port=5555","--broker=redis://redis:6379/0"]
    ports: ["5555:5555"]
    depends_on: { redis: { condition: service_healthy } }
  ui:
    build: { context: ./ui, dockerfile: Dockerfile }
    environment: { NEXT_PUBLIC_API_URL: http://api:8000 }
    depends_on: { api: { condition: service_started } }
    ports: ["3000:3000"]
volumes: { pgdata: {}, minio_data: {} }
